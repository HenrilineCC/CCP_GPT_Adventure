{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getContract } from \"../contract\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryLogEvents() {\n  _s();\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n\n  // Fetch current MetaMask user\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      if (!window.ethereum) {\n        setStatus(\"MetaMask is not detected. Please install it to continue.\");\n        return;\n      }\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const currentAddress = await signer.getAddress();\n        setCurrentUser(currentAddress);\n      } catch (error) {\n        console.error(\"Error fetching current user:\", error);\n        setStatus(\"Failed to fetch current user. Please connect your wallet.\");\n      }\n    };\n    fetchCurrentUser();\n\n    // Listen for MetaMask account changes\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          setCurrentUser(\"\");\n          setStatus(\"No account connected.\");\n        }\n      });\n\n      // Listen for chain changes\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n  const fetchLogEvents = async () => {\n    if (!tokenId || isNaN(tokenId) || parseInt(tokenId) < 0) {\n      setStatus(\"Please enter a valid positive Token ID.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setLogEvents([]);\n      setStatus(\"Fetching log events...\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = getContract(signer);\n      const tokenOwner = await contract.ownerOf(tokenId);\n      setOwner(tokenOwner);\n      if (currentUser.toLowerCase() !== tokenOwner.toLowerCase()) {\n        setStatus(\"You are not the owner of this Token ID and cannot view events.\");\n        return;\n      }\n      setStatus(\"You are authorized to view events for this Token ID.\");\n      const events = await contract.getEvents(tokenId);\n      setLogEvents(events);\n      setStatus(`Successfully fetched ${events.length} events.`);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n      if (error.code === \"CALL_EXCEPTION\") {\n        setStatus(\"Token ID does not exist or you are not authorized.\");\n      } else if (error.message.includes(\"MetaMask\")) {\n        setStatus(\"Please connect your MetaMask wallet.\");\n      } else {\n        setStatus(`An unexpected error occurred: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Query Log Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current User:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \", currentUser || \"Not connected to MetaMask\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Token ID\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLogEvents,\n      disabled: loading || !currentUser,\n      children: loading ? \"Fetching...\" : \"Fetch Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), owner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Owner of Token ID \", tokenId, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), \" \", owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), logEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), \" \", event.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), \" \", new Date(event.timestamp * 1000).toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryLogEvents, \"nklrnBWYqlXNLVVEkG2mOiLIQak=\");\n_c = QueryLogEvents;\nexport default QueryLogEvents;\nvar _c;\n$RefreshReg$(_c, \"QueryLogEvents\");","map":{"version":3,"names":["React","useState","useEffect","getContract","ethers","jsxDEV","_jsxDEV","QueryLogEvents","_s","tokenId","setTokenId","logEvents","setLogEvents","status","setStatus","loading","setLoading","currentUser","setCurrentUser","owner","setOwner","fetchCurrentUser","window","ethereum","provider","providers","Web3Provider","send","signer","getSigner","currentAddress","getAddress","error","console","on","accounts","length","location","reload","fetchLogEvents","isNaN","parseInt","contract","tokenOwner","ownerOf","toLowerCase","events","getEvents","code","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","map","event","index","description","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getContract } from \"../contract\";\nimport { ethers } from \"ethers\";\n\nfunction QueryLogEvents() {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n\n  // Fetch current MetaMask user\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      if (!window.ethereum) {\n        setStatus(\"MetaMask is not detected. Please install it to continue.\");\n        return;\n      }\n\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const currentAddress = await signer.getAddress();\n        setCurrentUser(currentAddress);\n      } catch (error) {\n        console.error(\"Error fetching current user:\", error);\n        setStatus(\"Failed to fetch current user. Please connect your wallet.\");\n      }\n    };\n\n    fetchCurrentUser();\n\n    // Listen for MetaMask account changes\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          setCurrentUser(\"\");\n          setStatus(\"No account connected.\");\n        }\n      });\n\n      // Listen for chain changes\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n\n  const fetchLogEvents = async () => {\n    if (!tokenId || isNaN(tokenId) || parseInt(tokenId) < 0) {\n      setStatus(\"Please enter a valid positive Token ID.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setLogEvents([]);\n      setStatus(\"Fetching log events...\");\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = getContract(signer);\n\n      const tokenOwner = await contract.ownerOf(tokenId);\n      setOwner(tokenOwner);\n\n      if (currentUser.toLowerCase() !== tokenOwner.toLowerCase()) {\n        setStatus(\"You are not the owner of this Token ID and cannot view events.\");\n        return;\n      }\n\n      setStatus(\"You are authorized to view events for this Token ID.\");\n\n      const events = await contract.getEvents(tokenId);\n      setLogEvents(events);\n      setStatus(`Successfully fetched ${events.length} events.`);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n\n      if (error.code === \"CALL_EXCEPTION\") {\n        setStatus(\"Token ID does not exist or you are not authorized.\");\n      } else if (error.message.includes(\"MetaMask\")) {\n        setStatus(\"Please connect your MetaMask wallet.\");\n      } else {\n        setStatus(`An unexpected error occurred: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <h2>Query Log Events</h2>\n      <p>\n        <strong>Current User:</strong>{\" \"}\n        {currentUser || \"Not connected to MetaMask\"}\n      </p>\n      <input\n        type=\"text\"\n        placeholder=\"Token ID\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <button onClick={fetchLogEvents} disabled={loading || !currentUser}>\n        {loading ? \"Fetching...\" : \"Fetch Events\"}\n      </button>\n      <p>{status}</p>\n      {owner && (\n        <p>\n          <strong>Owner of Token ID {tokenId}:</strong> {owner}\n        </p>\n      )}\n      {logEvents.length > 0 && (\n        <div>\n          <h3>Log Events:</h3>\n          <ul>\n            {logEvents.map((event, index) => (\n              <li key={index}>\n                <strong>Description:</strong> {event.description} <br />\n                <strong>Timestamp:</strong>{\" \"}\n                {new Date(event.timestamp * 1000).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QueryLogEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}