{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryLogEvents() {\n  _s();\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false); // 加入加载状态\n\n  const fetchLogEvents = async () => {\n    // 输入校验\n    if (!tokenId || isNaN(tokenId)) {\n      setStatus(\"Please enter a valid Token ID.\");\n      return;\n    }\n    try {\n      setLoading(true); // 开启加载状态\n      setStatus(\"\");\n      const contract = await getContract(); // 确保连接了正确的合约\n      console.log(\"Contract instance:\", contract);\n\n      // 调用 getEvents 方法\n      const events = await contract.getEvents(tokenId);\n      console.log(\"Fetched events:\", events);\n      setLogEvents(events);\n      setStatus(`Successfully fetched ${events.length} events for Token ID ${tokenId}`);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error.message || error);\n\n      // 根据错误信息提供更友好的提示\n      if (error.message.includes(\"Not authorized\")) {\n        setStatus(\"You are not authorized to view events for this Token ID.\");\n      } else if (error.message.includes(\"Token does not exist\")) {\n        setStatus(\"The specified Token ID does not exist.\");\n      } else {\n        setStatus(`Failed to fetch events: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false); // 关闭加载状态\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Query Log Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Token ID\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLogEvents,\n      disabled: loading,\n      children: loading ? \"Fetching...\" : \"Fetch Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), logEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), \" \", event.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), \" \", new Date(event.timestamp * 1000).toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryLogEvents, \"zQbdN61NtDbU/QQ1GIB1sCSyZHs=\");\n_c = QueryLogEvents;\nexport default QueryLogEvents;\nvar _c;\n$RefreshReg$(_c, \"QueryLogEvents\");","map":{"version":3,"names":["React","useState","getContract","jsxDEV","_jsxDEV","QueryLogEvents","_s","tokenId","setTokenId","logEvents","setLogEvents","status","setStatus","loading","setLoading","fetchLogEvents","isNaN","contract","console","log","events","getEvents","length","error","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","map","event","index","description","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\n\nfunction QueryLogEvents() {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false); // 加入加载状态\n\n  const fetchLogEvents = async () => {\n    // 输入校验\n    if (!tokenId || isNaN(tokenId)) {\n      setStatus(\"Please enter a valid Token ID.\");\n      return;\n    }\n\n    try {\n      setLoading(true); // 开启加载状态\n      setStatus(\"\");\n\n      const contract = await getContract(); // 确保连接了正确的合约\n      console.log(\"Contract instance:\", contract);\n\n      // 调用 getEvents 方法\n      const events = await contract.getEvents(tokenId);\n      console.log(\"Fetched events:\", events);\n\n      setLogEvents(events);\n      setStatus(`Successfully fetched ${events.length} events for Token ID ${tokenId}`);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error.message || error);\n\n      // 根据错误信息提供更友好的提示\n      if (error.message.includes(\"Not authorized\")) {\n        setStatus(\"You are not authorized to view events for this Token ID.\");\n      } else if (error.message.includes(\"Token does not exist\")) {\n        setStatus(\"The specified Token ID does not exist.\");\n      } else {\n        setStatus(`Failed to fetch events: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false); // 关闭加载状态\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <h2>Query Log Events</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Token ID\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <button onClick={fetchLogEvents} disabled={loading}>\n        {loading ? \"Fetching...\" : \"Fetch Events\"}\n      </button>\n      <p>{status}</p>\n      {logEvents.length > 0 && (\n        <div>\n          <h3>Log Events:</h3>\n          <ul>\n            {logEvents.map((event, index) => (\n              <li key={index}>\n                <strong>Description:</strong> {event.description} <br />\n                <strong>Timestamp:</strong>{\" \"}\n                {new Date(event.timestamp * 1000).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QueryLogEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}