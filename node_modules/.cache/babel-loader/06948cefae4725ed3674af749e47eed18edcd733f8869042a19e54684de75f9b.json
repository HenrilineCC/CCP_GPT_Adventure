{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/AuthorizeUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthorizeUser() {\n  _s();\n  const [userAddress, setUserAddress] = useState(\"\"); // 输入的用户地址\n  const [status, setStatus] = useState(\"\"); // 操作状态信息\n  const [isAuthorized, setIsAuthorized] = useState(null); // 查询授权状态\n\n  // 授权用户\n  const authorizeUser = async () => {\n    if (!userAddress || !userAddress.startsWith(\"0x\") || userAddress.length !== 42) {\n      setStatus(\"Please enter a valid Ethereum address.\");\n      return;\n    }\n    try {\n      const contract = await getContract();\n      setStatus(\"Authorizing user...\");\n      const tx = await contract.authorizeUser(userAddress); // 调用合约的授权方法\n      await tx.wait();\n      setStatus(`User ${userAddress} authorized successfully.`);\n    } catch (error) {\n      console.error(\"Error authorizing user:\", error.message || error);\n      setStatus(`Failed to authorize user: ${error.message || error}`);\n    }\n  };\n\n  // 撤销用户授权\n  const revokeUser = async () => {\n    if (!userAddress || !userAddress.startsWith(\"0x\") || userAddress.length !== 42) {\n      setStatus(\"Please enter a valid Ethereum address.\");\n      return;\n    }\n    try {\n      const contract = await getContract();\n      setStatus(\"Revoking user authorization...\");\n      const tx = await contract.revokeUser(userAddress); // 调用合约的撤销授权方法\n      await tx.wait();\n      setStatus(`User ${userAddress} authorization revoked successfully.`);\n    } catch (error) {\n      console.error(\"Error revoking user:\", error.message || error);\n      setStatus(`Failed to revoke user: ${error.message || error}`);\n    }\n  };\n\n  // 检查用户是否被授权\n  const checkAuthorization = async () => {\n    if (!userAddress || !userAddress.startsWith(\"0x\") || userAddress.length !== 42) {\n      setStatus(\"Please enter a valid Ethereum address.\");\n      return;\n    }\n    try {\n      const contract = await getContract();\n      setStatus(\"Checking user authorization...\");\n      const result = await contract.isAuthorized(userAddress); // 调用合约的授权查询方法\n      setIsAuthorized(result);\n      setStatus(`User ${userAddress} is ${result ? \"authorized\" : \"not authorized\"}.`);\n    } catch (error) {\n      console.error(\"Error checking authorization:\", error.message || error);\n      setStatus(`Failed to check authorization: ${error.message || error}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authorize User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter User Address\",\n      value: userAddress,\n      onChange: e => setUserAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: authorizeUser,\n      children: \"Authorize User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: revokeUser,\n      children: \"Revoke Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAuthorization,\n      children: \"Check Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isAuthorized !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: userAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \" is\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: isAuthorized ? \"green\" : \"red\"\n        },\n        children: isAuthorized ? \"AUTHORIZED\" : \"NOT AUTHORIZED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorizeUser, \"2rRGcwZzYw1Puop+T6LmmDuaiVs=\");\n_c = AuthorizeUser;\nexport default AuthorizeUser;\nvar _c;\n$RefreshReg$(_c, \"AuthorizeUser\");","map":{"version":3,"names":["React","useState","getContract","jsxDEV","_jsxDEV","AuthorizeUser","_s","userAddress","setUserAddress","status","setStatus","isAuthorized","setIsAuthorized","authorizeUser","startsWith","length","contract","tx","wait","error","console","message","revokeUser","checkAuthorization","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/AuthorizeUser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\n\nfunction AuthorizeUser() {\n  const [userAddress, setUserAddress] = useState(\"\"); // 输入的用户地址\n  const [status, setStatus] = useState(\"\"); // 操作状态信息\n  const [isAuthorized, setIsAuthorized] = useState(null); // 查询授权状态\n\n  // 授权用户\n  const authorizeUser = async () => {\n    if (!userAddress || !userAddress.startsWith(\"0x\") || userAddress.length !== 42) {\n      setStatus(\"Please enter a valid Ethereum address.\");\n      return;\n    }\n\n    try {\n      const contract = await getContract();\n      setStatus(\"Authorizing user...\");\n      const tx = await contract.authorizeUser(userAddress); // 调用合约的授权方法\n      await tx.wait();\n      setStatus(`User ${userAddress} authorized successfully.`);\n    } catch (error) {\n      console.error(\"Error authorizing user:\", error.message || error);\n      setStatus(`Failed to authorize user: ${error.message || error}`);\n    }\n  };\n\n  // 撤销用户授权\n  const revokeUser = async () => {\n    if (!userAddress || !userAddress.startsWith(\"0x\") || userAddress.length !== 42) {\n      setStatus(\"Please enter a valid Ethereum address.\");\n      return;\n    }\n\n    try {\n      const contract = await getContract();\n      setStatus(\"Revoking user authorization...\");\n      const tx = await contract.revokeUser(userAddress); // 调用合约的撤销授权方法\n      await tx.wait();\n      setStatus(`User ${userAddress} authorization revoked successfully.`);\n    } catch (error) {\n      console.error(\"Error revoking user:\", error.message || error);\n      setStatus(`Failed to revoke user: ${error.message || error}`);\n    }\n  };\n\n  // 检查用户是否被授权\n  const checkAuthorization = async () => {\n    if (!userAddress || !userAddress.startsWith(\"0x\") || userAddress.length !== 42) {\n      setStatus(\"Please enter a valid Ethereum address.\");\n      return;\n    }\n\n    try {\n      const contract = await getContract();\n      setStatus(\"Checking user authorization...\");\n      const result = await contract.isAuthorized(userAddress); // 调用合约的授权查询方法\n      setIsAuthorized(result);\n      setStatus(`User ${userAddress} is ${result ? \"authorized\" : \"not authorized\"}.`);\n    } catch (error) {\n      console.error(\"Error checking authorization:\", error.message || error);\n      setStatus(`Failed to check authorization: ${error.message || error}`);\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <h2>Authorize User</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter User Address\"\n        value={userAddress}\n        onChange={(e) => setUserAddress(e.target.value)}\n      />\n      <button onClick={authorizeUser}>Authorize User</button>\n      <button onClick={revokeUser}>Revoke Authorization</button>\n      <button onClick={checkAuthorization}>Check Authorization</button>\n      <p>{status}</p>\n      {isAuthorized !== null && (\n        <p>\n          <strong>{userAddress}</strong> is{\" \"}\n          <span style={{ color: isAuthorized ? \"green\" : \"red\" }}>\n            {isAuthorized ? \"AUTHORIZED\" : \"NOT AUTHORIZED\"}\n          </span>\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default AuthorizeUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}