{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getContract } from \"../contract\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryLogEvents() {\n  _s();\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\"); // 当前用户地址\n  const [owner, setOwner] = useState(\"\"); // tokenId 所有者\n\n  // 获取当前用户地址\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n        const accounts = await provider.listAccounts(); // 获取本地账户\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          setStatus(\"No accounts found in local network. Check your provider.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching current user:\", error);\n        setStatus(\"Failed to fetch current user.\");\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  const fetchLogEvents = async () => {\n    if (!tokenId || isNaN(tokenId)) {\n      setStatus(\"Please enter a valid Token ID.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setStatus(\"\");\n      const contract = await getContract();\n      console.log(\"Contract instance:\", contract);\n\n      // 获取 tokenId 的所有者\n      const tokenOwner = await contract.ownerOf(tokenId);\n      setOwner(tokenOwner);\n\n      // 检查当前用户是否是所有者\n      if (currentUser.toLowerCase() === tokenOwner.toLowerCase()) {\n        setStatus(\"You are the owner of this Token ID.\");\n      } else {\n        setStatus(\"You are not the owner of this Token ID.\");\n      }\n\n      // 调用 getEvents 方法\n      const events = await contract.getEvents(tokenId);\n      console.log(\"Fetched events:\", events);\n      setLogEvents(events);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error.message || error);\n      if (error.message.includes(\"Not authorized\")) {\n        setStatus(\"You are not authorized to view events for this Token ID.\");\n      } else if (error.message.includes(\"Token does not exist\")) {\n        setStatus(\"The specified Token ID does not exist.\");\n      } else {\n        setStatus(`Failed to fetch events: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Query Log Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current User:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), \" \", currentUser || \"Not connected to local network\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Token ID\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLogEvents,\n      disabled: loading,\n      children: loading ? \"Fetching...\" : \"Fetch Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), owner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Owner of Token ID \", tokenId, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), \" \", owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), logEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), \" \", event.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), \" \", new Date(event.timestamp * 1000).toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryLogEvents, \"nklrnBWYqlXNLVVEkG2mOiLIQak=\");\n_c = QueryLogEvents;\nexport default QueryLogEvents;\nvar _c;\n$RefreshReg$(_c, \"QueryLogEvents\");","map":{"version":3,"names":["React","useState","useEffect","getContract","ethers","jsxDEV","_jsxDEV","QueryLogEvents","_s","tokenId","setTokenId","logEvents","setLogEvents","status","setStatus","loading","setLoading","currentUser","setCurrentUser","owner","setOwner","fetchCurrentUser","provider","providers","JsonRpcProvider","accounts","listAccounts","length","error","console","fetchLogEvents","isNaN","contract","log","tokenOwner","ownerOf","toLowerCase","events","getEvents","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","map","event","index","description","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getContract } from \"../contract\";\nimport { ethers } from \"ethers\";\n\nfunction QueryLogEvents() {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\"); // 当前用户地址\n  const [owner, setOwner] = useState(\"\"); // tokenId 所有者\n\n  // 获取当前用户地址\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n        const accounts = await provider.listAccounts(); // 获取本地账户\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          setStatus(\"No accounts found in local network. Check your provider.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching current user:\", error);\n        setStatus(\"Failed to fetch current user.\");\n      }\n    };\n\n    fetchCurrentUser();\n  }, []);\n\n  const fetchLogEvents = async () => {\n    if (!tokenId || isNaN(tokenId)) {\n      setStatus(\"Please enter a valid Token ID.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setStatus(\"\");\n\n      const contract = await getContract();\n      console.log(\"Contract instance:\", contract);\n\n      // 获取 tokenId 的所有者\n      const tokenOwner = await contract.ownerOf(tokenId);\n      setOwner(tokenOwner);\n\n      // 检查当前用户是否是所有者\n      if (currentUser.toLowerCase() === tokenOwner.toLowerCase()) {\n        setStatus(\"You are the owner of this Token ID.\");\n      } else {\n        setStatus(\"You are not the owner of this Token ID.\");\n      }\n\n      // 调用 getEvents 方法\n      const events = await contract.getEvents(tokenId);\n      console.log(\"Fetched events:\", events);\n\n      setLogEvents(events);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error.message || error);\n\n      if (error.message.includes(\"Not authorized\")) {\n        setStatus(\"You are not authorized to view events for this Token ID.\");\n      } else if (error.message.includes(\"Token does not exist\")) {\n        setStatus(\"The specified Token ID does not exist.\");\n      } else {\n        setStatus(`Failed to fetch events: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <h2>Query Log Events</h2>\n      <p><strong>Current User:</strong> {currentUser || \"Not connected to local network\"}</p>\n      <input\n        type=\"text\"\n        placeholder=\"Token ID\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <button onClick={fetchLogEvents} disabled={loading}>\n        {loading ? \"Fetching...\" : \"Fetch Events\"}\n      </button>\n      <p>{status}</p>\n      {owner && (\n        <p>\n          <strong>Owner of Token ID {tokenId}:</strong> {owner}\n        </p>\n      )}\n      {logEvents.length > 0 && (\n        <div>\n          <h3>Log Events:</h3>\n          <ul>\n            {logEvents.map((event, index) => (\n              <li key={index}>\n                <strong>Description:</strong> {event.description} <br />\n                <strong>Timestamp:</strong>{\" \"}\n                {new Date(event.timestamp * 1000).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QueryLogEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}