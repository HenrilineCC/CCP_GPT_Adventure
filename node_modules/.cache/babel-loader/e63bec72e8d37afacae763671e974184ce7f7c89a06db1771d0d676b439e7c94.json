{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getContract } from \"../contract\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryLogEvents() {\n  _s();\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n\n  // Fetch current MetaMask user\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      if (!window.ethereum) {\n        setStatus(\"MetaMask 未检测到，请安装后继续。\");\n        return;\n      }\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n        // 检查是否已经连接过账户\n        const accounts = await provider.listAccounts();\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          // 请求用户连接钱包\n          await provider.send(\"eth_requestAccounts\", []);\n          const signer = provider.getSigner();\n          const currentAddress = await signer.getAddress();\n          setCurrentUser(currentAddress);\n        }\n      } catch (error) {\n        console.error(\"获取当前用户时出错：\", error);\n        setStatus(\"获取当前用户失败，请连接钱包。\");\n      }\n    };\n    fetchCurrentUser();\n\n    // Listen for MetaMask account changes\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          setCurrentUser(\"\");\n          setStatus(\"未连接任何账户。\");\n        }\n      });\n\n      // Listen for chain changes\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n  const fetchLogEvents = async () => {\n    if (!tokenId || isNaN(tokenId) || parseInt(tokenId) < 0) {\n      setStatus(\"请输入有效的 Token ID。\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setLogEvents([]);\n      setStatus(\"正在获取日志事件...\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = getContract(signer);\n\n      // 调用 ownerOf 方法\n      const tokenOwner = await contract.ownerOf(tokenId);\n      setOwner(tokenOwner);\n\n      // 检查当前用户是否是所有者\n      if (currentUser.toLowerCase() !== tokenOwner.toLowerCase()) {\n        setStatus(\"您不是该 Token ID 的所有者，无法查看事件。\");\n        return;\n      }\n      setStatus(\"您已获得查看该 Token ID 的权限。\");\n\n      // 获取日志事件\n      const events = await contract.getEvents(tokenId);\n      setLogEvents(events);\n      setStatus(`成功获取 ${events.length} 条事件记录。`);\n    } catch (error) {\n      console.error(\"获取事件时出错：\", error);\n      if (error.code === \"CALL_EXCEPTION\") {\n        setStatus(\"Token ID 不存在，或您无权查看。\");\n      } else if (error.message.includes(\"MetaMask\")) {\n        setStatus(\"请连接您的 MetaMask 钱包。\");\n      } else {\n        setStatus(`发生意外错误：${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u67E5\\u8BE2\\u65E5\\u5FD7\\u4E8B\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u5F53\\u524D\\u7528\\u6237\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), \" \", currentUser || \"未连接到 MetaMask\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Token ID\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLogEvents,\n      disabled: loading || !currentUser,\n      children: loading ? \"正在获取...\" : \"获取事件\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), owner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Token ID \", tokenId, \" \\u7684\\u6240\\u6709\\u8005\\uFF1A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), \" \", owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), logEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u65E5\\u5FD7\\u4E8B\\u4EF6\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u63CF\\u8FF0\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), \" \", event.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u65F6\\u95F4\\u6233\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), \" \", new Date(event.timestamp * 1000).toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryLogEvents, \"nklrnBWYqlXNLVVEkG2mOiLIQak=\");\n_c = QueryLogEvents;\nexport default QueryLogEvents;\nvar _c;\n$RefreshReg$(_c, \"QueryLogEvents\");","map":{"version":3,"names":["React","useState","useEffect","getContract","ethers","jsxDEV","_jsxDEV","QueryLogEvents","_s","tokenId","setTokenId","logEvents","setLogEvents","status","setStatus","loading","setLoading","currentUser","setCurrentUser","owner","setOwner","fetchCurrentUser","window","ethereum","provider","providers","Web3Provider","accounts","listAccounts","length","send","signer","getSigner","currentAddress","getAddress","error","console","on","location","reload","fetchLogEvents","isNaN","parseInt","contract","tokenOwner","ownerOf","toLowerCase","events","getEvents","code","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","map","event","index","description","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getContract } from \"../contract\";\nimport { ethers } from \"ethers\";\n\nfunction QueryLogEvents() {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n\n  // Fetch current MetaMask user\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      if (!window.ethereum) {\n        setStatus(\"MetaMask 未检测到，请安装后继续。\");\n        return;\n      }\n\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n        // 检查是否已经连接过账户\n        const accounts = await provider.listAccounts();\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          // 请求用户连接钱包\n          await provider.send(\"eth_requestAccounts\", []);\n          const signer = provider.getSigner();\n          const currentAddress = await signer.getAddress();\n          setCurrentUser(currentAddress);\n        }\n      } catch (error) {\n        console.error(\"获取当前用户时出错：\", error);\n        setStatus(\"获取当前用户失败，请连接钱包。\");\n      }\n    };\n\n    fetchCurrentUser();\n\n    // Listen for MetaMask account changes\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setCurrentUser(accounts[0]);\n        } else {\n          setCurrentUser(\"\");\n          setStatus(\"未连接任何账户。\");\n        }\n      });\n\n      // Listen for chain changes\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n\n  const fetchLogEvents = async () => {\n    if (!tokenId || isNaN(tokenId) || parseInt(tokenId) < 0) {\n      setStatus(\"请输入有效的 Token ID。\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setLogEvents([]);\n      setStatus(\"正在获取日志事件...\");\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = getContract(signer);\n\n      // 调用 ownerOf 方法\n      const tokenOwner = await contract.ownerOf(tokenId);\n      setOwner(tokenOwner);\n\n      // 检查当前用户是否是所有者\n      if (currentUser.toLowerCase() !== tokenOwner.toLowerCase()) {\n        setStatus(\"您不是该 Token ID 的所有者，无法查看事件。\");\n        return;\n      }\n\n      setStatus(\"您已获得查看该 Token ID 的权限。\");\n\n      // 获取日志事件\n      const events = await contract.getEvents(tokenId);\n      setLogEvents(events);\n      setStatus(`成功获取 ${events.length} 条事件记录。`);\n    } catch (error) {\n      console.error(\"获取事件时出错：\", error);\n\n      if (error.code === \"CALL_EXCEPTION\") {\n        setStatus(\"Token ID 不存在，或您无权查看。\");\n      } else if (error.message.includes(\"MetaMask\")) {\n        setStatus(\"请连接您的 MetaMask 钱包。\");\n      } else {\n        setStatus(`发生意外错误：${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <h2>查询日志事件</h2>\n      <p>\n        <strong>当前用户：</strong>{\" \"}\n        {currentUser || \"未连接到 MetaMask\"}\n      </p>\n      <input\n        type=\"text\"\n        placeholder=\"Token ID\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <button\n        onClick={fetchLogEvents}\n        disabled={loading || !currentUser}\n      >\n        {loading ? \"正在获取...\" : \"获取事件\"}\n      </button>\n      <p>{status}</p>\n      {owner && (\n        <p>\n          <strong>Token ID {tokenId} 的所有者：</strong> {owner}\n        </p>\n      )}\n      {logEvents.length > 0 && (\n        <div>\n          <h3>日志事件：</h3>\n          <ul>\n            {logEvents.map((event, index) => (\n              <li key={index}>\n                <strong>描述：</strong> {event.description} <br />\n                <strong>时间戳：</strong>{\" \"}\n                {new Date(event.timestamp * 1000).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QueryLogEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}