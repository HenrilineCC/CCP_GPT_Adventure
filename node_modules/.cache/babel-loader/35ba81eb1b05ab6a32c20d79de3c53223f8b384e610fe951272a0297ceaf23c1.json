{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/LogEvent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogEvent() {\n  _s();\n  const [tokenId, setTokenId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const logEvent = async () => {\n    if (!tokenId || !description) {\n      setStatus(\"Token ID and Event Description are required.\");\n      return;\n    }\n    setLoading(true);\n    setStatus(\"Processing event log...\");\n    try {\n      const contract = await getContract();\n\n      // 检查用户是否有权限\n      const tokenOwner = await contract.ownerOf(tokenId);\n      const currentUser = await contract.signer.getAddress();\n      if (currentUser.toLowerCase() !== tokenOwner.toLowerCase()) {\n        setStatus(\"You are not authorized to log events for this Token ID.\");\n        return;\n      }\n\n      // 调用智能合约的 logEvent 方法\n      const tx = await contract.logEvent(tokenId, description);\n      console.log(\"Transaction sent:\", tx);\n\n      // 等待交易完成\n      await tx.wait();\n      console.log(\"Transaction confirmed:\", tx);\n      setStatus(`Event logged for Token ID ${tokenId}: \"${description}\"`);\n    } catch (error) {\n      console.error(\"Error logging event:\", error.message || error);\n      if (error.message.includes(\"Caller is not authorized\")) {\n        setStatus(\"You are not authorized to log events for this Token ID.\");\n      } else if (error.message.includes(\"Token does not exist\")) {\n        setStatus(\"The specified Token ID does not exist.\");\n      } else {\n        setStatus(`Failed to log event: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Token ID\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value),\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Event Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logEvent,\n      disabled: loading,\n      children: loading ? \"Logging...\" : \"Log Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(LogEvent, \"aQc/rXDe6eVNMwtkwbwnH9/9sE4=\");\n_c = LogEvent;\nexport default LogEvent;\nvar _c;\n$RefreshReg$(_c, \"LogEvent\");","map":{"version":3,"names":["React","useState","getContract","jsxDEV","_jsxDEV","LogEvent","_s","tokenId","setTokenId","description","setDescription","status","setStatus","loading","setLoading","logEvent","contract","tokenOwner","ownerOf","currentUser","signer","getAddress","toLowerCase","tx","console","log","wait","error","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/LogEvent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\n\nfunction LogEvent() {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const logEvent = async () => {\n    if (!tokenId || !description) {\n      setStatus(\"Token ID and Event Description are required.\");\n      return;\n    }\n\n    setLoading(true);\n    setStatus(\"Processing event log...\");\n\n    try {\n      const contract = await getContract();\n\n      // 检查用户是否有权限\n      const tokenOwner = await contract.ownerOf(tokenId);\n      const currentUser = await contract.signer.getAddress();\n\n      if (currentUser.toLowerCase() !== tokenOwner.toLowerCase()) {\n        setStatus(\"You are not authorized to log events for this Token ID.\");\n        return;\n      }\n\n      // 调用智能合约的 logEvent 方法\n      const tx = await contract.logEvent(tokenId, description);\n      console.log(\"Transaction sent:\", tx);\n\n      // 等待交易完成\n      await tx.wait();\n      console.log(\"Transaction confirmed:\", tx);\n\n      setStatus(`Event logged for Token ID ${tokenId}: \"${description}\"`);\n    } catch (error) {\n      console.error(\"Error logging event:\", error.message || error);\n\n      if (error.message.includes(\"Caller is not authorized\")) {\n        setStatus(\"You are not authorized to log events for this Token ID.\");\n      } else if (error.message.includes(\"Token does not exist\")) {\n        setStatus(\"The specified Token ID does not exist.\");\n      } else {\n        setStatus(`Failed to log event: ${error.message || error}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <h2>Log Event</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Token ID\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n        disabled={loading}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Event Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        disabled={loading}\n      />\n      <button onClick={logEvent} disabled={loading}>\n        {loading ? \"Logging...\" : \"Log Event\"}\n      </button>\n      <p>{status}</p>\n    </div>\n  );\n}\n\nexport default LogEvent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}