{"ast":null,"code":"var _jsxFileName = \"/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryLogEvents() {\n  _s();\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const viewTokenEvents = async tokenId => {\n    try {\n      const contract = await getContract();\n      const events = await contract.getEvents(tokenId);\n      console.log(\"Token Events:\", events);\n    } catch (error) {\n      console.error(\"Error fetching token events:\", error.message || error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Query Log Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Token ID\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLogEvents,\n      children: \"Fetch Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), logEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), \" \", event.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), \" \", new Date(event.timestamp * 1000).toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryLogEvents, \"Htkus1jyaiY52bRq0alJYAU8o44=\");\n_c = QueryLogEvents;\nexport default QueryLogEvents;\nvar _c;\n$RefreshReg$(_c, \"QueryLogEvents\");","map":{"version":3,"names":["React","useState","getContract","jsxDEV","_jsxDEV","QueryLogEvents","_s","tokenId","setTokenId","logEvents","setLogEvents","status","setStatus","viewTokenEvents","contract","events","getEvents","console","log","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","fetchLogEvents","length","map","event","index","description","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/sharb/Downloads/CCP_GPT_Adventure-main/frontend/src/components/QueryLogEvents.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getContract } from \"../contract\";\n\nfunction QueryLogEvents() {\n  const [tokenId, setTokenId] = useState(\"\");\n  const [logEvents, setLogEvents] = useState([]);\n  const [status, setStatus] = useState(\"\");\n\n  const viewTokenEvents = async (tokenId) => {\n    try {\n      const contract = await getContract();\n      const events = await contract.getEvents(tokenId);\n      console.log(\"Token Events:\", events);\n    } catch (error) {\n      console.error(\"Error fetching token events:\", error.message || error);\n    }\n  };\n  \n\n  return (\n    <div className=\"component\">\n      <h2>Query Log Events</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Token ID\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <button onClick={fetchLogEvents}>Fetch Events</button>\n      <p>{status}</p>\n      {logEvents.length > 0 && (\n        <div>\n          <h3>Log Events:</h3>\n          <ul>\n            {logEvents.map((event, index) => (\n              <li key={index}>\n                <strong>Description:</strong> {event.description} <br />\n                <strong>Timestamp:</strong> {new Date(event.timestamp * 1000).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QueryLogEvents;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,eAAe,GAAG,MAAON,OAAO,IAAK;IACzC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMZ,WAAW,CAAC,CAAC;MACpC,MAAMa,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAACT,OAAO,CAAC;MAChDU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,MAAM,CAAC;IACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACC,OAAO,IAAID,KAAK,CAAC;IACvE;EACF,CAAC;EAGD,oBACEf,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAEC,cAAe;MAAAZ,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtDtB,OAAA;MAAAkB,QAAA,EAAIX;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdjB,SAAS,CAAC0B,MAAM,GAAG,CAAC,iBACnB/B,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,EACGb,SAAS,CAAC2B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BlC,OAAA;UAAAkB,QAAA,gBACElB,OAAA;YAAAkB,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACW,KAAK,CAACE,WAAW,EAAC,GAAC,eAAAnC,OAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxDtB,OAAA;YAAAkB,QAAA,EAAQ;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,IAAIc,IAAI,CAACH,KAAK,CAACI,SAAS,GAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA,GAFvEJ,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CA1CQD,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AA4CvB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}